version: "2"

services:
  postgres:
    image: postgres:16.0
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: practice
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - databases_net
    ports:
      - 5432:5432
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d practice -U admin"]

  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - databases_net
    ports:
      - 27017:27017
    volumes:
      - mongo_vol:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok'

  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    restart: always
    networks:
      - databases_net
    ports:
      - 6379:6379
    volumes:
      - redis_vol:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  
  neo4j:
    image: neo4j:5.12.0
    container_name: neo4j
    environment:
      NEO4J_AUTH: none
    networks:
      - databases_net
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_vol:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
  
  elasticsearch:
    image: bitnami/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    networks:
      - databases_net
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_vol:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:9200/_cat/health"]

  auth:
    image: auth:latest
    container_name: auth
    networks:
      - databases_net
    volumes:
      - auth_vol:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:3000/ping || exit 1"]
  
  lab1:
    image: lab1:latest
    container_name: lab1
    networks:
      - databases_net
    volumes:
      - lab1_vol:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:3001/ping || exit 1"]

  lab2:
    image: lab2:latest
    container_name: lab2
    networks:
      - databases_net
    volumes:
      - lab2_vol:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:3002/ping || exit 1"]

  lab3:
    image: lab3:latest
    container_name: lab3
    networks:
      - databases_net
    volumes:
      - lab3_vol:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:3003/ping || exit 1"]

  nginx:  
    image: nginx:1.25.3-alpine
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - databases_net
    volumes:
      - ./labs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - lab1
      - lab2
      - lab3
      - auth

volumes:
  postgres_vol:
  mongo_vol:
  redis_vol:
  neo4j_vol:
  elasticsearch_vol:
  lab1_vol:
  lab2_vol:
  lab3_vol:
  auth_vol:

networks:
  databases_net: